var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/BaseType-1.html",[0,0.035,1,0.423,2,1.873]],["body/interfaces/BaseType-1.html",[0,0.071,1,0.868,3,0.299,4,0.532,5,0.532,6,0.532,7,0.532,8,0.532,9,0.408,10,0.429,11,3.643,12,1.152,13,0.975,14,0.975,15,0.684,16,0.087,17,0.975,18,0.532,19,0.408,20,0.532,21,0.532,22,0.532,23,1.106,24,0.408,25,1.074,26,0.408,27,0.532,28,0.408,29,0.532,30,0.408,31,0.532,32,0.408,33,0.684,34,0.532,35,0.053,36,0.053]],["title/interfaces/_Date.html",[0,0.042,28,0.502]],["body/interfaces/_Date.html",[0,0.072,1,0.883,3,0.32,4,0.568,5,0.568,6,0.568,7,0.568,8,0.568,9,0.436,10,0.45,12,1.17,13,0.568,14,0.568,15,0.436,16,0.087,17,0.8,18,0.568,19,0.436,20,0.568,21,0.568,22,0.568,23,1.128,24,0.436,25,1.128,26,0.436,27,0.568,28,0.613,29,0.925,30,0.436,31,0.568,32,0.436,33,0.709,34,0.568,35,0.056,36,0.056]],["title/interfaces/_any.html",[0,0.042,24,0.502]],["body/interfaces/_any.html",[0,0.072,1,0.885,3,0.323,4,0.574,5,0.574,6,0.574,7,0.574,8,0.574,9,0.44,10,0.453,12,1.173,13,0.574,14,0.574,15,0.44,16,0.087,17,0.805,18,0.574,19,0.44,20,0.574,21,0.574,22,0.574,23,1.131,24,0.617,25,1.131,26,0.44,27,0.574,28,0.44,29,0.574,30,0.44,31,0.574,32,0.44,33,0.713,34,0.574,35,0.056,36,0.056]],["title/interfaces/_boolean.html",[0,0.042,26,0.502]],["body/interfaces/_boolean.html",[0,0.072,1,0.883,3,0.32,4,0.568,5,0.568,6,0.568,7,0.568,8,0.568,9,0.436,10,0.45,12,1.17,13,0.568,14,0.568,15,0.436,16,0.087,17,0.8,18,0.568,19,0.436,20,0.568,21,0.568,22,0.568,23,1.128,24,0.436,25,1.128,26,0.613,27,0.925,28,0.436,29,0.568,30,0.436,31,0.568,32,0.436,33,0.709,34,0.568,35,0.056,36,0.056]],["title/interfaces/_number.html",[0,0.042,30,0.502]],["body/interfaces/_number.html",[0,0.072,1,0.883,3,0.32,4,0.568,5,0.568,6,0.568,7,0.568,8,0.568,9,0.436,10,0.45,12,1.17,13,0.568,14,0.568,15,0.436,16,0.087,17,0.8,18,0.568,19,0.436,20,0.568,21,0.568,22,0.568,23,1.128,24,0.436,25,1.128,26,0.436,27,0.568,28,0.436,29,0.568,30,0.613,31,0.925,32,0.436,33,0.709,34,0.568,35,0.056,36,0.056]],["title/interfaces/_string.html",[0,0.042,32,0.502]],["body/interfaces/_string.html",[0,0.072,1,0.883,3,0.32,4,0.568,5,0.568,6,0.568,7,0.568,8,0.568,9,0.436,10,0.45,12,1.17,13,0.568,14,0.568,15,0.436,16,0.087,17,1.004,18,0.568,19,0.436,20,0.568,21,0.568,22,0.568,23,1.128,24,0.436,25,1.128,26,0.436,27,0.568,28,0.436,29,0.568,30,0.436,31,0.568,32,0.613,33,0.709,34,0.568,35,0.056,36,0.056]],["title/dependencies.html",[37,1.413,38,2.005]],["body/dependencies.html",[16,0.085,35,0.075,36,0.075,38,2.752,39,3.034,40,3.034,41,3.034,42,3.034,43,3.649,44,3.034]],["title/index.html",[9,0.423,45,1.873,46,1.873]],["body/index.html",[3,0.203,15,0.437,16,0.084,19,0.614,33,0.277,35,0.04,36,0.04,47,1.225,48,1.458,49,1.225,50,0.924,51,1.805,52,2.717,53,1.805,54,0.924,55,0.924,56,0.924,57,1.932,58,1.225,59,1.932,60,2.393,61,1.225,62,1.932,63,2.393,64,2.393,65,2.393,66,1.932,67,1.225,68,1.225,69,1.225,70,1.225,71,1.932,72,1.225,73,1.225,74,1.225,75,1.225,76,1.225,77,1.225,78,1.225,79,1.225,80,1.225,81,1.225,82,1.225,83,1.225,84,1.225,85,1.805,86,1.225,87,1.225,88,1.225,89,1.225,90,1.225,91,1.225,92,1.225,93,2.717,94,2.482,95,1.932,96,1.225,97,1.225,98,1.225,99,1.225,100,1.225,101,1.225,102,1.932,103,1.225,104,1.225,105,1.225,106,1.225,107,1.225,108,1.225,109,1.225,110,1.225,111,1.225,112,1.225,113,1.225,114,1.225,115,1.932,116,1.225,117,1.225,118,1.225,119,1.225,120,1.225,121,1.932,122,1.225,123,1.458,124,1.225,125,1.458,126,2.393,127,1.225,128,1.932,129,1.225,130,1.225,131,1.225,132,1.225,133,1.225,134,1.225,135,1.225,136,1.225,137,1.225,138,1.225,139,1.225,140,1.225,141,1.225,142,1.225,143,1.225,144,1.225,145,1.225,146,1.225,147,1.225,148,1.225,149,1.225,150,1.225,151,1.225,152,1.225,153,1.225,154,1.225,155,1.225,156,1.225,157,2.717,158,1.932,159,1.225,160,1.225,161,1.932,162,1.225,163,1.932,164,1.225,165,1.932,166,1.225,167,1.932,168,1.225,169,1.225,170,1.225,171,1.225]],["title/modules.html",[172,2.254]],["body/modules.html",[16,0.079,35,0.079,36,0.079,172,2.499]],["title/overview.html",[173,2.254]],["body/overview.html",[3,0.54,16,0.078,35,0.078,36,0.078,173,2.458,174,3.259]],["title/properties.html",[10,0.441,37,1.413]],["body/properties.html",[10,0.422,16,0.087,35,0.067,36,0.067,48,1.921,50,1.921,51,1.921,53,1.921,54,2.468,55,1.921,56,1.921,85,1.921,94,1.921,123,1.921,125,1.921,175,2.547,176,2.547,177,2.547,178,2.547,179,2.547,180,3.272,181,2.547,182,2.547,183,2.547,184,2.547,185,2.547,186,2.547,187,2.547,188,2.547,189,2.547]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0.1.24",{"_index":164,"title":{},"body":{"index.html":{}}}],["0.2.0",{"_index":167,"title":{},"body":{"index.html":{}}}],["0.2.6",{"_index":175,"title":{},"body":{"properties.html":{}}}],["1",{"_index":2,"title":{"interfaces/BaseType-1.html":{}},"body":{}}],["14.1.0",{"_index":43,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":40,"title":{},"body":{"dependencies.html":{}}}],["2007",{"_index":86,"title":{},"body":{"index.html":{}}}],["219",{"_index":174,"title":{},"body":{"overview.html":{}}}],["4",{"_index":82,"title":{},"body":{"index.html":{}}}],["61850",{"_index":55,"title":{},"body":{"index.html":{},"properties.html":{}}}],["_any",{"_index":24,"title":{"interfaces/_any.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["_boolean",{"_index":26,"title":{"interfaces/_boolean.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["_date",{"_index":28,"title":{"interfaces/_Date.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["_number",{"_index":30,"title":{"interfaces/_number.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["_scltype",{"_index":66,"title":{},"body":{"index.html":{}}}],["_string",{"_index":32,"title":{"interfaces/_string.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["advantages",{"_index":116,"title":{},"body":{"index.html":{}}}],["allows",{"_index":96,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":42,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":91,"title":{},"body":{"index.html":{}}}],["array",{"_index":21,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["author",{"_index":187,"title":{},"body":{"properties.html":{}}}],["automatically",{"_index":131,"title":{},"body":{"index.html":{}}}],["b",{"_index":84,"title":{},"body":{"index.html":{}}}],["based",{"_index":108,"title":{},"body":{"index.html":{}}}],["basetype",{"_index":1,"title":{"interfaces/BaseType-1.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["between",{"_index":98,"title":{},"body":{"index.html":{}}}],["bidirectional",{"_index":120,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":27,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["bugs",{"_index":182,"title":{},"body":{"properties.html":{}}}],["called",{"_index":102,"title":{},"body":{"index.html":{}}}],["case",{"_index":70,"title":{},"body":{"index.html":{}}}],["code",{"_index":140,"title":{},"body":{"index.html":{}}}],["comments",{"_index":150,"title":{},"body":{"index.html":{}}}],["compact",{"_index":142,"title":{},"body":{"index.html":{}}}],["compiler",{"_index":20,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["completion",{"_index":154,"title":{},"body":{"index.html":{}}}],["const",{"_index":71,"title":{},"body":{"index.html":{}}}],["constructor(private",{"_index":79,"title":{},"body":{"index.html":{}}}],["containing",{"_index":141,"title":{},"body":{"index.html":{}}}],["content",{"_index":12,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["context",{"_index":61,"title":{},"body":{"index.html":{}}}],["continue",{"_index":168,"title":{},"body":{"index.html":{}}}],["conversions",{"_index":107,"title":{},"body":{"index.html":{}}}],["convert",{"_index":97,"title":{},"body":{"index.html":{}}}],["cxml",{"_index":146,"title":{},"body":{"index.html":{}}}],["cxsd",{"_index":123,"title":{},"body":{"index.html":{},"properties.html":{}}}],["d.ts",{"_index":147,"title":{},"body":{"index.html":{}}}],["date",{"_index":29,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["declarative",{"_index":109,"title":{},"body":{"index.html":{}}}],["defined",{"_index":137,"title":{},"body":{"index.html":{}}}],["definition",{"_index":148,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":38,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":176,"title":{},"body":{"properties.html":{}}}],["document",{"_index":33,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"index.html":{}}}],["downloads",{"_index":132,"title":{},"body":{"index.html":{}}}],["driven",{"_index":122,"title":{},"body":{"index.html":{}}}],["each",{"_index":136,"title":{},"body":{"index.html":{}}}],["editors",{"_index":152,"title":{},"body":{"index.html":{}}}],["export",{"_index":23,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["file",{"_index":6,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["files",{"_index":63,"title":{},"body":{"index.html":{}}}],["form",{"_index":105,"title":{},"body":{"index.html":{}}}],["generated",{"_index":114,"title":{},"body":{"index.html":{}}}],["generator",{"_index":127,"title":{},"body":{"index.html":{}}}],["getting",{"_index":45,"title":{"index.html":{}},"body":{}}],["git+https://github.com/romdhanisam/open",{"_index":185,"title":{},"body":{"properties.html":{}}}],["header",{"_index":87,"title":{},"body":{"index.html":{}}}],["help",{"_index":151,"title":{},"body":{"index.html":{}}}],["highly",{"_index":129,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":179,"title":{},"body":{"properties.html":{}}}],["http://www.iec.ch/61850/2003/scl",{"_index":74,"title":{},"body":{"index.html":{}}}],["http://www.w3.org/2001/xmlschema",{"_index":75,"title":{},"body":{"index.html":{}}}],["https://github.com/romdhanisam/open",{"_index":180,"title":{},"body":{"properties.html":{}}}],["id",{"_index":88,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":49,"title":{},"body":{"index.html":{}}}],["iec",{"_index":54,"title":{},"body":{"index.html":{},"properties.html":{}}}],["iec61850",{"_index":178,"title":{},"body":{"properties.html":{}}}],["import",{"_index":62,"title":{},"body":{"index.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["info",{"_index":4,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["information",{"_index":159,"title":{},"body":{"index.html":{}}}],["install",{"_index":58,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["interfaces",{"_index":3,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"index.html":{},"overview.html":{}}}],["javascript",{"_index":95,"title":{},"body":{"index.html":{}}}],["js",{"_index":139,"title":{},"body":{"index.html":{}}}],["jsdoc",{"_index":149,"title":{},"body":{"index.html":{}}}],["json",{"_index":93,"title":{},"body":{"index.html":{}}}],["jsonix",{"_index":19,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"index.html":{}}}],["keywords",{"_index":177,"title":{},"body":{"properties.html":{}}}],["lib",{"_index":52,"title":{},"body":{"index.html":{}}}],["lib';example",{"_index":67,"title":{},"body":{"index.html":{}}}],["library",{"_index":53,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":48,"title":{},"body":{"index.html":{},"properties.html":{}}}],["machine",{"_index":144,"title":{},"body":{"index.html":{}}}],["manually",{"_index":113,"title":{},"body":{"index.html":{}}}],["map",{"_index":22,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["mappings",{"_index":111,"title":{},"body":{"index.html":{}}}],["mappingstyle",{"_index":77,"title":{},"body":{"index.html":{}}}],["marshal",{"_index":68,"title":{},"body":{"index.html":{}}}],["marshalling",{"_index":106,"title":{},"body":{"index.html":{}}}],["matching",{"_index":36,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mit",{"_index":50,"title":{},"body":{"index.html":{},"properties.html":{}}}],["modules",{"_index":172,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["namespace",{"_index":138,"title":{},"body":{"index.html":{}}}],["namespaceprefixes",{"_index":73,"title":{},"body":{"index.html":{}}}],["namespaces",{"_index":72,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":128,"title":{},"body":{"index.html":{}}}],["npm",{"_index":59,"title":{},"body":{"index.html":{}}}],["number",{"_index":31,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["opentempl",{"_index":163,"title":{},"body":{"index.html":{}}}],["opentempl/scl",{"_index":160,"title":{},"body":{"index.html":{}}}],["opentemplate",{"_index":171,"title":{},"body":{"index.html":{}}}],["opentemplate/scl",{"_index":60,"title":{},"body":{"index.html":{}}}],["optional",{"_index":11,"title":{},"body":{"interfaces/BaseType-1.html":{}}}],["optionally",{"_index":121,"title":{},"body":{"index.html":{}}}],["otherattributes",{"_index":13,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["outputs",{"_index":134,"title":{},"body":{"index.html":{}}}],["overview",{"_index":173,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":37,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parse",{"_index":100,"title":{},"body":{"index.html":{}}}],["parser",{"_index":126,"title":{},"body":{"index.html":{}}}],["peer",{"_index":41,"title":{},"body":{"dependencies.html":{}}}],["primitives.ts",{"_index":8,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["process",{"_index":101,"title":{},"body":{"index.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"properties.html":{}}}],["publish",{"_index":169,"title":{},"body":{"index.html":{}}}],["published",{"_index":166,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":130,"title":{},"body":{"index.html":{}}}],["reference",{"_index":92,"title":{},"body":{"index.html":{}}}],["referenced",{"_index":133,"title":{},"body":{"index.html":{}}}],["release",{"_index":81,"title":{},"body":{"index.html":{}}}],["repository",{"_index":184,"title":{},"body":{"properties.html":{}}}],["required",{"_index":18,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["results",{"_index":35,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["revision",{"_index":83,"title":{},"body":{"index.html":{}}}],["romdhani",{"_index":189,"title":{},"body":{"properties.html":{}}}],["safe",{"_index":119,"title":{},"body":{"index.html":{}}}],["samir",{"_index":188,"title":{},"body":{"properties.html":{}}}],["schema",{"_index":115,"title":{},"body":{"index.html":{}}}],["scl",{"_index":51,"title":{},"body":{"index.html":{},"properties.html":{}}}],["scllibservice",{"_index":65,"title":{},"body":{"index.html":{}}}],["scope",{"_index":161,"title":{},"body":{"index.html":{}}}],["serialize",{"_index":104,"title":{},"body":{"index.html":{}}}],["simplified",{"_index":78,"title":{},"body":{"index.html":{}}}],["source",{"_index":5,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["spdx",{"_index":47,"title":{},"body":{"index.html":{}}}],["src/lib/xmlns/xml",{"_index":7,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["standard",{"_index":56,"title":{},"body":{"index.html":{},"properties.html":{}}}],["started",{"_index":46,"title":{"index.html":{}},"body":{}}],["state",{"_index":143,"title":{},"body":{"index.html":{}}}],["streaming",{"_index":124,"title":{},"body":{"index.html":{}}}],["string",{"_index":17,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["strongly",{"_index":117,"title":{},"body":{"index.html":{}}}],["structured",{"_index":118,"title":{},"body":{"index.html":{}}}],["structures",{"_index":99,"title":{},"body":{"index.html":{}}}],["supported",{"_index":157,"title":{},"body":{"index.html":{}}}],["tab",{"_index":153,"title":{},"body":{"index.html":{}}}],["table",{"_index":145,"title":{},"body":{"index.html":{}}}],["template.git",{"_index":186,"title":{},"body":{"properties.html":{}}}],["template/issues",{"_index":183,"title":{},"body":{"properties.html":{}}}],["template/tree/main/projects/scllib#readme",{"_index":181,"title":{},"body":{"properties.html":{}}}],["this.scllibservice.marshaldocument({scl",{"_index":90,"title":{},"body":{"index.html":{}}}],["this.scllibservice.setcontext(namespaces",{"_index":80,"title":{},"body":{"index.html":{}}}],["tooltips",{"_index":156,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":39,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":135,"title":{},"body":{"index.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{},"index.html":{}}}],["type_name",{"_index":14,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["typescript",{"_index":64,"title":{},"body":{"index.html":{}}}],["unmarshalling",{"_index":103,"title":{},"body":{"index.html":{}}}],["updates",{"_index":170,"title":{},"body":{"index.html":{}}}],["usage",{"_index":57,"title":{},"body":{"index.html":{}}}],["use",{"_index":69,"title":{},"body":{"index.html":{}}}],["uuid.v4",{"_index":89,"title":{},"body":{"index.html":{}}}],["var",{"_index":34,"title":{},"body":{"interfaces/BaseType-1.html":{},"interfaces/_Date.html":{},"interfaces/_any.html":{},"interfaces/_boolean.html":{},"interfaces/_number.html":{},"interfaces/_string.html":{}}}],["verification",{"_index":155,"title":{},"body":{"index.html":{}}}],["version",{"_index":85,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versions",{"_index":158,"title":{},"body":{"index.html":{}}}],["white_check_mark",{"_index":165,"title":{},"body":{"index.html":{}}}],["written",{"_index":112,"title":{},"body":{"index.html":{}}}],["x",{"_index":162,"title":{},"body":{"index.html":{}}}],["xml",{"_index":94,"title":{},"body":{"index.html":{},"properties.html":{}}}],["xml/json",{"_index":110,"title":{},"body":{"index.html":{}}}],["xs",{"_index":76,"title":{},"body":{"index.html":{}}}],["xsd",{"_index":125,"title":{},"body":{"index.html":{},"properties.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BaseType-1.html":{"url":"interfaces/BaseType-1.html","title":"interface - BaseType-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/xmlns/xml-primitives.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            otherAttributes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            TYPE_NAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otherAttributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        otherAttributes:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TYPE_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TYPE_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BaseType {\n\tTYPE_NAME?: string; //required from jsonix compiler\n\tcontent?: any; //Array\n\totherAttributes?: any;// Map;\n}\nexport interface _any extends BaseType { content: any; }\n\nexport interface _boolean extends BaseType { content: boolean; }\n\nexport interface _Date extends BaseType { content: Date; }\n\nexport interface _number extends BaseType { content: number; }\n\nexport interface _string extends BaseType { content: string; }\n\nexport interface document extends BaseType {\n}\n\nexport var document: document;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_Date.html":{"url":"interfaces/_Date.html","title":"interface - _Date","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _Date\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/xmlns/xml-primitives.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseType\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BaseType {\n\tTYPE_NAME?: string; //required from jsonix compiler\n\tcontent?: any; //Array\n\totherAttributes?: any;// Map;\n}\nexport interface _any extends BaseType { content: any; }\n\nexport interface _boolean extends BaseType { content: boolean; }\n\nexport interface _Date extends BaseType { content: Date; }\n\nexport interface _number extends BaseType { content: number; }\n\nexport interface _string extends BaseType { content: string; }\n\nexport interface document extends BaseType {\n}\n\nexport var document: document;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_any.html":{"url":"interfaces/_any.html","title":"interface - _any","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _any\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/xmlns/xml-primitives.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseType\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BaseType {\n\tTYPE_NAME?: string; //required from jsonix compiler\n\tcontent?: any; //Array\n\totherAttributes?: any;// Map;\n}\nexport interface _any extends BaseType { content: any; }\n\nexport interface _boolean extends BaseType { content: boolean; }\n\nexport interface _Date extends BaseType { content: Date; }\n\nexport interface _number extends BaseType { content: number; }\n\nexport interface _string extends BaseType { content: string; }\n\nexport interface document extends BaseType {\n}\n\nexport var document: document;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_boolean.html":{"url":"interfaces/_boolean.html","title":"interface - _boolean","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _boolean\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/xmlns/xml-primitives.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseType\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BaseType {\n\tTYPE_NAME?: string; //required from jsonix compiler\n\tcontent?: any; //Array\n\totherAttributes?: any;// Map;\n}\nexport interface _any extends BaseType { content: any; }\n\nexport interface _boolean extends BaseType { content: boolean; }\n\nexport interface _Date extends BaseType { content: Date; }\n\nexport interface _number extends BaseType { content: number; }\n\nexport interface _string extends BaseType { content: string; }\n\nexport interface document extends BaseType {\n}\n\nexport var document: document;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_number.html":{"url":"interfaces/_number.html","title":"interface - _number","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _number\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/xmlns/xml-primitives.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseType\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BaseType {\n\tTYPE_NAME?: string; //required from jsonix compiler\n\tcontent?: any; //Array\n\totherAttributes?: any;// Map;\n}\nexport interface _any extends BaseType { content: any; }\n\nexport interface _boolean extends BaseType { content: boolean; }\n\nexport interface _Date extends BaseType { content: Date; }\n\nexport interface _number extends BaseType { content: number; }\n\nexport interface _string extends BaseType { content: string; }\n\nexport interface document extends BaseType {\n}\n\nexport var document: document;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_string.html":{"url":"interfaces/_string.html","title":"interface - _string","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _string\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/xmlns/xml-primitives.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseType\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface BaseType {\n\tTYPE_NAME?: string; //required from jsonix compiler\n\tcontent?: any; //Array\n\totherAttributes?: any;// Map;\n}\nexport interface _any extends BaseType { content: any; }\n\nexport interface _boolean extends BaseType { content: boolean; }\n\nexport interface _Date extends BaseType { content: Date; }\n\nexport interface _number extends BaseType { content: number; }\n\nexport interface _string extends BaseType { content: string; }\n\nexport interface document extends BaseType {\n}\n\nexport var document: document;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^14.1.0\n        \n            @angular/core : ^14.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\nSPDX-License-Identifier: MIT license\n-->\n\nscl-lib\nLibrary for IEC 61850 standard\n\n\n\n\nUsage\nInstall:\nnpm i @opentemplate/scl-lib\nContext\n\nUsage\nYou can import the library files from TypeScript:\nimport { ScllibService, _SCLType } from '@opentemplate/scl-lib';Example\n\nMarshal Document use case\n\nconst namespaces: any = {\n  namespacePrefixes: {\n    \"http://www.iec.ch/61850/2003/SCL\": \"\",\n    \"http://www.w3.org/2001/XMLSchema\": \"xs\"\n  },\n  mappingStyle : \"simplified\"\n};\n...\nconstructor(private scllibService: ScllibService) {\n    this.scllibService.setContext(namespaces);\n}\n...\nconst scl: _SCLType = {\n  release: 4,\n  revision: \"B\",\n  version: \"2007\",\n  header: {\n    id: uuid.v4()\n  },\n};\n...\nthis.scllibService.marshalDocument({SCL: scl})\nAPI Reference:\nJsonix\n\nJsonix (JSON interfaces for XML) is a JavaScript library which allows you to convert between XML and JSON structures.\nWith Jsonix you can parse XML into JSON (this process is called unmarshalling) or serialize JSON in XML form (this is called marshalling).\nThese conversions are based on declarative XML/JSON mappings which can be written manually or generated from an XML Schema.\n\nJsonix advantages:\n\nStrongly structured\nType-safe\nBidirectional\n(Optionally) XML Schema-driven\n\ncxsd\n\ncxsd is a streaming XSD parser and XML parser generator for Node.js and\n(optionally but highly recommended) TypeScript.\nIt automatically downloads all referenced .xsd files and outputs two files for each defined namespace:\n.js JavaScript code for Node.js containing a compact state machine table for the cxml parser.\n.d.ts TypeScript definition with JSDoc comments to help editors with tab completion, type verification and tooltips.\n\n\n\n\nSupported Versions\nInformation about supported @opentempl/scl-lib versions.\n\n\n\nVersion\nSupported\nScope\n\n\n\n\n\n:x:\nopentempl\n\n\n> 0.1.24 & \n:white_check_mark:\nopentempl\n\n\n\nWe published 0.2.0 to npm as @opentemplate/scl-lib and will continue to publish updates there.\n\n\n\nVersion\nSupported\nScope\n\n\n\n\n>= 0.2.0\n:white_check_mark:\nopentemplate\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    219 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.6\n        \n            Description : Library for IEC 61850 standard\n        \n            Keywords : XML, XSD, CXSD, SCL, IEC, IEC61850\n        \n            Homepage : https://github.com/romdhanisam/open-template/tree/main/projects/scllib#readme\n        \n            Bugs : https://github.com/romdhanisam/open-template/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/romdhanisam/open-template.git\n        \n            Author : Samir Romdhani\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
